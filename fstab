
#
# /etc/fstab
# Created by anaconda on Tue Feb  2 21:50:03 2016
#
# Accessible filesystems, by reference, are maintained under '/dev/disk/'.
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.
#
# After editing this file, run 'systemctl daemon-reload' to update systemd
# units generated from this file.
#
UUID=89xxxxxx-2xxx-4xxx-8xxx-7fxxxxxxxxx /                       xfs     defaults        0 0
UUID=8bxxxxxx-2xxx-4xxx-8xxx-2fxxxxxxxxx /boot                   ext4    defaults        1 2
UUID=4xxx-Axxx          /boot/efi               vfat    umask=0077,shortname=winnt 0 2
UUID=21xxxxxx-3xxx-4xxx-9xxx-86xxxxxxxxxx /home                   xfs     defaults        0 0
UUID=d9xxxxxx-2xxx-4xxx-9xxx-71xxxxxxxxxx swap                    swap    defaults        0 0

# 系統開機時會主動讀取/etc/fstab這個文件中的內容，根據文件裡面的配置掛載磁碟。這樣我們只需要將磁碟的掛載訊息寫入這個文件中我們就不需要每次開機啟動之後手動進行掛載了
# 總共6個欄位
# 1. 分割區的path (用blkid指令查Label name或UUID也可以) *用path（/dev/sda)來掛載分區時是被固定死的，一旦磁碟的插槽順序發生了變化，就會出現名稱不對應的問題。因為這個名稱是會改變的。而uuid掛載的話就不用擔心會發生錯亂的問題了。
# 2. 分割區的mount point掛載點
# 3. 分割區的file system檔案系統, 有ext家族, xfs, NTFS...等等
# 4. 掛載時的參數
# 5. 分割區是否要備份, 0不備份, 1每日, 2隔日
# 6. 讓fsck決定系統不正常關機時, 是否要做檢查, /目錄必須設1, 其他設成2, 0為不檢查

# 掛載的限制
# 根目錄是必須掛載的，而且一定要先於其他mount point被掛載
# 掛載點必須是已經存在的目錄
# 分割、格式化、掛載完之後，掛載點會自動產生目錄lost+found：系統不正常產生錯誤時，會將一些遺失的片段放置於此目錄下，通常這個目錄會自動出現在裝置目錄下這是砍不掉的目錄喔

三大部分 個部分步驟大概如下
一、分割
1. df -h #查看分割狀況
2. ll /dev/nvm* #查看磁碟是掛載在哪個路徑
[root@CentOS_Stream8 ~]# ll /dev/nvm*
crw------- 1 root root 247, 0 Jul 27 21:35 /dev/nvme0
brw-rw---- 1 root disk 259, 0 Jul 27 21:35 /dev/nvme0n1
brw-rw---- 1 root disk 259, 1 Jul 27 21:35 /dev/nvme0n1p1
brw-rw---- 1 root disk 259, 2 Jul 27 21:35 /dev/nvme0n1p2
brw-rw---- 1 root disk 259, 3 Jul 27 21:35 /dev/nvme0n1p3
brw-rw---- 1 root disk 259, 4 Jul 27 21:35 /dev/nvme0n1p4
3. fdisk -l /dev/nvm0n1 #查看SSD的partition table狀況
[root@CentOS_Stream8 ~]# fdisk -l /dev/nvme0n1
Disk /dev/nvme0n1: 477 GiB, 512110190592 bytes, 1000215216 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: A85E6479-73E5-4C5C-802B-9BAE9782BD4A

Device             Start       End   Sectors   Size Type
/dev/nvme0n1p1      2048    391167    389120   190M Linux filesystem
/dev/nvme0n1p2    391168  98045951  97654784  46.6G Linux filesystem
/dev/nvme0n1p3  98045952 117186559  19140608   9.1G Linux filesystem
/dev/nvme0n1p4 117186560 500000767 382814208 182.6G Linux filesystem
4. 開始分割, fdisk /dev/nvme0n1 (進入互動介面)
5. 輸入n : add a new partition
6. Partition number : 輸入第幾個分割槽
7. First sector : 系統會自己抓最後一個分割槽的sector , 所以default即可
8. Last sector : 可輸入+60G 代表此分割槽的size
9. 輸入w : wirte table to disk an exit

二、格式化
mkfs -t ext4 /dev/nvm0n1px (#看是p幾)
[root@CentOS_Stream8 ~]# mkfs -t ext4 /dev/nvme0n1p5
mke2fs 1.45.6 (20-Mar-2020)
Discarding device blocks: done
Creating filesystem with 15728640 4k blocks and 3932160 inodes
Filesystem UUID: 4e0d6a52-4420-4819-bde6-035d85b74fbe
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000, 7962624, 11239424

Allocating group tables: done
Writing inode tables: done
Creating journal (65536 blocks): done
Writing superblocks and filesystem accounting information: done

三、掛載
vim /etc/fstab
#下面加到最後一行, UUID在vim之前要先輸入blkid查看新分割的UUID是多少
UUID=3103906e-33d3-4904-8ad0-f63a40a66dfc /fio_test ext4 defaults 0 0